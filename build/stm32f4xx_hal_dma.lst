ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_hal_dma.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.DMA_SetConfig,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	DMA_SetConfig:
  26              	.LFB135:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @file    stm32f4xx_hal_dma.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @version V1.7.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @date    14-April-2017
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *    
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + IO operation functions
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Peripheral State and errors functions
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @verbatim     
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                         ##### How to use this driver #####
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   [..]
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        and DMA requests.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Polling mode IO operation ***
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =================================
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      ===================================
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case the DMA interrupt is configured 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          detection.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            a single access to a Word in the Memory).
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination.
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =============================================
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @endverbatim
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @attention
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      without specific prior written permission.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */ 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #include "stm32f4xx_hal.h"
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup STM32F4xx_HAL_Driver
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @defgroup DMA DMA
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief DMA HAL module driver
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** typedef struct
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t Reserved0;
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** } DMA_Base_Registers;
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  * @{
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  */
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    5U  /* 5 ms */
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */  
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     reference manual.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = 0U;
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 5


 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      when FIFO mode is enabled */
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Allocate lock resource */
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Change DMA peripheral state */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the peripheral */
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout */
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_TIMEOUT;
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the CR register value */
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 6


 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the FCR register value */
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the FIFO threshold */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_ERROR; 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the error code */
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                                                                                      
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the DMA state */
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 7


 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_BUSY;
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR  = 0x00000021U;
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 8


 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the error code */
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the DMA state */
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim   
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       #####  IO operation functions  #####
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           Start DMA transfer with interrupt
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Abort DMA transfer
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Poll for transfer complete
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma      : pointer to a DMA_HandleTypeDef structure that contains
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 9


 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 10


 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable Common interrupts*/
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                   
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        this single data is finished.  
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 11


 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Check for the Timeout */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change the DMA state*/
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Set Abort State  */
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 12


 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma:          pointer to a DMA_HandleTypeDef structure that contains
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CompleteLevel: Specifies the DMA level complete.
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         This model could be used for debug purpose.
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  Timeout:       Timeout duration.
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* No transfer ongoing */
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Transfer Complete flag */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Half Transfer Complete flag */
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 13


 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the ISR register value */
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmpisr = regs->ISR;
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 14


 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_ERROR;
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    }
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval None
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t count = 0U;
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 15


 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the direct mode error flag */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 16


 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Half transfer callback */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer complete flag */
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 17


 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return;
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Process Unlocked */
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Change the DMA state */
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Transfer complete callback */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* manage error case */
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the stream */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 18


 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       do
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if (++count > timeout)
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           break;
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Transfer error callback */
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Register callbacks
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma:                 pointer to a DMA_HandleTypeDef structure that contains
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID:           User Callback identifer
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  pCallback:            pointer to private callbacsk function which has pointer to 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */                      
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 19


1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status =  HAL_ERROR;
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  UnRegister callbacks
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma:                 pointer to a DMA_HandleTypeDef structure that contains
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID:           User Callback identifer
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */              
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 20


1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_ERROR;
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                     ##### State and Errors functions #####
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This subsection provides functions allowing to
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Check the DMA state
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Get error code
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 21


1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA state.
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL state
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->State;
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Return the DMA error code
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval DMA Error Code
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->ErrorCode;
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
  28              		.loc 1 1162 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 30B4     		push	{r4, r5}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 22


  37              		.cfi_offset 4, -8
  38              		.cfi_offset 5, -4
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear DBM bit */
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
  39              		.loc 1 1164 0
  40 0002 0468     		ldr	r4, [r0]
  41 0004 2568     		ldr	r5, [r4]
  42 0006 25F48025 		bic	r5, r5, #262144
  43 000a 2560     		str	r5, [r4]
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Configure DMA Stream data length */
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
  44              		.loc 1 1167 0
  45 000c 0468     		ldr	r4, [r0]
  46 000e 6360     		str	r3, [r4, #4]
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Peripheral to Memory */
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
  47              		.loc 1 1170 0
  48 0010 8368     		ldr	r3, [r0, #8]
  49              	.LVL1:
  50 0012 402B     		cmp	r3, #64
  51 0014 04D1     		bne	.L2
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
  52              		.loc 1 1173 0
  53 0016 0368     		ldr	r3, [r0]
  54 0018 9A60     		str	r2, [r3, #8]
  55              	.LVL2:
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
  56              		.loc 1 1176 0
  57 001a 0368     		ldr	r3, [r0]
  58 001c D960     		str	r1, [r3, #12]
  59 001e 03E0     		b	.L1
  60              	.LVL3:
  61              	.L2:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory to Peripheral */
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
  62              		.loc 1 1182 0
  63 0020 0368     		ldr	r3, [r0]
  64 0022 9960     		str	r1, [r3, #8]
  65              	.LVL4:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
  66              		.loc 1 1185 0
  67 0024 0368     		ldr	r3, [r0]
  68 0026 DA60     		str	r2, [r3, #12]
  69              	.L1:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 23


1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
  70              		.loc 1 1187 0
  71 0028 30BC     		pop	{r4, r5}
  72 002a 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE135:
  76              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
  77              		.align	2
  78              		.thumb
  79              		.thumb_func
  81              	DMA_CalcBaseAndBitshift:
  82              	.LFB136:
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval Stream base address
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
  83              		.loc 1 1196 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL5:
  89 0000 10B4     		push	{r4}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 4, -4
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
  93              		.loc 1 1197 0
  94 0002 0368     		ldr	r3, [r0]
  95 0004 DAB2     		uxtb	r2, r3
  96 0006 103A     		subs	r2, r2, #16
  97 0008 0949     		ldr	r1, .L7
  98 000a A1FB0242 		umull	r4, r2, r1, r2
  99 000e 1209     		lsrs	r2, r2, #4
 100              	.LVL6:
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 101              		.loc 1 1201 0
 102 0010 0849     		ldr	r1, .L7+4
 103 0012 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 104 0014 C165     		str	r1, [r0, #92]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if (stream_number > 3U)
 105              		.loc 1 1203 0
 106 0016 032A     		cmp	r2, #3
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 107              		.loc 1 1206 0
 108 0018 23F47F73 		bic	r3, r3, #1020
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 24


 109 001c 23F00303 		bic	r3, r3, #3
 110 0020 88BF     		it	hi
 111 0022 0433     		addhi	r3, r3, #4
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 112              		.loc 1 1211 0
 113 0024 8365     		str	r3, [r0, #88]
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->StreamBaseAddress;
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 114              		.loc 1 1215 0
 115 0026 806D     		ldr	r0, [r0, #88]
 116              	.LVL7:
 117 0028 5DF8044B 		ldr	r4, [sp], #4
 118 002c 7047     		bx	lr
 119              	.L8:
 120 002e 00BF     		.align	2
 121              	.L7:
 122 0030 ABAAAAAA 		.word	-1431655765
 123 0034 00000000 		.word	.LANCHOR0
 124              		.cfi_endproc
 125              	.LFE136:
 127              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 128              		.align	2
 129              		.thumb
 130              		.thumb_func
 132              	DMA_CheckFifoParam:
 133              	.LFB137:
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 134              		.loc 1 1224 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL8:
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 140              		.loc 1 1226 0
 141 0000 836A     		ldr	r3, [r0, #40]
 142              	.LVL9:
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 143              		.loc 1 1229 0
 144 0002 8269     		ldr	r2, [r0, #24]
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 25


 145 0004 92B9     		cbnz	r2, .L10
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 146              		.loc 1 1231 0
 147 0006 012B     		cmp	r3, #1
 148 0008 09D0     		beq	.L12
 149 000a 0BB1     		cbz	r3, .L13
 150 000c 022B     		cmp	r3, #2
 151 000e 33D1     		bne	.L29
 152              	.L13:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 153              		.loc 1 1235 0
 154 0010 C06A     		ldr	r0, [r0, #44]
 155              	.LVL10:
 156 0012 00F08070 		and	r0, r0, #16777216
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 157              		.loc 1 1225 0
 158 0016 0030     		adds	r0, r0, #0
 159 0018 18BF     		it	ne
 160 001a 0120     		movne	r0, #1
 161 001c 7047     		bx	lr
 162              	.LVL11:
 163              	.L12:
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 164              		.loc 1 1241 0
 165 001e C06A     		ldr	r0, [r0, #44]
 166              	.LVL12:
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 167              		.loc 1 1225 0
 168 0020 B0F1C07F 		cmp	r0, #25165824
 169 0024 14BF     		ite	ne
 170 0026 0020     		movne	r0, #0
 171 0028 0120     		moveq	r0, #1
 172 002a 7047     		bx	lr
 173              	.LVL13:
 174              	.L10:
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 26


 175              		.loc 1 1254 0
 176 002c B2F5005F 		cmp	r2, #8192
 177 0030 15D1     		bne	.L14
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 178              		.loc 1 1256 0
 179 0032 032B     		cmp	r3, #3
 180 0034 03D8     		bhi	.L15
 181 0036 DFE803F0 		tbb	[pc, r3]
 182              	.L16:
 183 003a 21       		.byte	(.L24-.L16)/2
 184 003b 04       		.byte	(.L17-.L16)/2
 185 003c 21       		.byte	(.L24-.L16)/2
 186 003d 0B       		.byte	(.L18-.L16)/2
 187              		.align	1
 188              	.L15:
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 189              		.loc 1 1225 0
 190 003e 0020     		movs	r0, #0
 191              	.LVL14:
 192 0040 7047     		bx	lr
 193              	.LVL15:
 194              	.L17:
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 195              		.loc 1 1263 0
 196 0042 C06A     		ldr	r0, [r0, #44]
 197              	.LVL16:
 198 0044 00F08070 		and	r0, r0, #16777216
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 199              		.loc 1 1225 0
 200 0048 0030     		adds	r0, r0, #0
 201 004a 18BF     		it	ne
 202 004c 0120     		movne	r0, #1
 203 004e 7047     		bx	lr
 204              	.LVL17:
 205              	.L18:
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 206              		.loc 1 1269 0
 207 0050 C06A     		ldr	r0, [r0, #44]
 208              	.LVL18:
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 209              		.loc 1 1225 0
 210 0052 B0F1C07F 		cmp	r0, #25165824
 211 0056 14BF     		ite	ne
 212 0058 0020     		movne	r0, #0
 213 005a 0120     		moveq	r0, #1
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 27


 214 005c 7047     		bx	lr
 215              	.LVL19:
 216              	.L14:
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;   
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Word */
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 217              		.loc 1 1282 0
 218 005e 022B     		cmp	r3, #2
 219 0060 0ED9     		bls	.L27
 220 0062 032B     		cmp	r3, #3
 221 0064 01D0     		beq	.L20
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 222              		.loc 1 1225 0
 223 0066 0020     		movs	r0, #0
 224              	.LVL20:
 225 0068 7047     		bx	lr
 226              	.LVL21:
 227              	.L20:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 228              		.loc 1 1290 0
 229 006a C06A     		ldr	r0, [r0, #44]
 230              	.LVL22:
 231 006c 00F08070 		and	r0, r0, #16777216
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 232              		.loc 1 1225 0
 233 0070 0030     		adds	r0, r0, #0
 234 0072 18BF     		it	ne
 235 0074 0120     		movne	r0, #1
 236 0076 7047     		bx	lr
 237              	.LVL23:
 238              	.L29:
 239 0078 0020     		movs	r0, #0
 240              	.LVL24:
 241 007a 7047     		bx	lr
 242              	.LVL25:
 243              	.L24:
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 244              		.loc 1 1260 0
 245 007c 0120     		movs	r0, #1
 246              	.LVL26:
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 28


 247 007e 7047     		bx	lr
 248              	.LVL27:
 249              	.L27:
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 250              		.loc 1 1287 0
 251 0080 0120     		movs	r0, #1
 252              	.LVL28:
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 253              		.loc 1 1301 0
 254 0082 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE137:
 258              		.section	.text.HAL_DMA_Init,"ax",%progbits
 259              		.align	2
 260              		.global	HAL_DMA_Init
 261              		.thumb
 262              		.thumb_func
 264              	HAL_DMA_Init:
 265              	.LFB123:
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 266              		.loc 1 190 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              	.LVL29:
 271 0000 70B5     		push	{r4, r5, r6, lr}
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 16
 274              		.cfi_offset 4, -16
 275              		.cfi_offset 5, -12
 276              		.cfi_offset 6, -8
 277              		.cfi_offset 14, -4
 278 0002 0446     		mov	r4, r0
 279              	.LVL30:
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 280              		.loc 1 192 0
 281 0004 FFF7FEFF 		bl	HAL_GetTick
 282              	.LVL31:
 283 0008 0546     		mov	r5, r0
 284              	.LVL32:
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
 285              		.loc 1 196 0
 286 000a 002C     		cmp	r4, #0
 287 000c 5BD0     		beq	.L36
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 288              		.loc 1 222 0
 289 000e 0023     		movs	r3, #0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 29


 290 0010 84F83430 		strb	r3, [r4, #52]
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 291              		.loc 1 225 0
 292 0014 0223     		movs	r3, #2
 293 0016 84F83530 		strb	r3, [r4, #53]
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 294              		.loc 1 228 0
 295 001a 2368     		ldr	r3, [r4]
 296 001c 1A68     		ldr	r2, [r3]
 297 001e 22F00102 		bic	r2, r2, #1
 298 0022 1A60     		str	r2, [r3]
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 299              		.loc 1 231 0
 300 0024 0AE0     		b	.L32
 301              	.LVL33:
 302              	.L33:
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 303              		.loc 1 234 0
 304 0026 FFF7FEFF 		bl	HAL_GetTick
 305              	.LVL34:
 306 002a 401B     		subs	r0, r0, r5
 307 002c 0528     		cmp	r0, #5
 308 002e 05D9     		bls	.L32
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 309              		.loc 1 237 0
 310 0030 2023     		movs	r3, #32
 311 0032 6365     		str	r3, [r4, #84]
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
 312              		.loc 1 240 0
 313 0034 0320     		movs	r0, #3
 314 0036 84F83500 		strb	r0, [r4, #53]
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_TIMEOUT;
 315              		.loc 1 242 0
 316 003a 70BD     		pop	{r4, r5, r6, pc}
 317              	.LVL35:
 318              	.L32:
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 319              		.loc 1 231 0 discriminator 1
 320 003c 2368     		ldr	r3, [r4]
 321 003e 1A68     		ldr	r2, [r3]
 322 0040 12F0010F 		tst	r2, #1
 323 0044 EFD1     		bne	.L33
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 324              		.loc 1 247 0
 325 0046 1968     		ldr	r1, [r3]
 326              	.LVL36:
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 327              		.loc 1 250 0
 328 0048 204A     		ldr	r2, .L38
 329 004a 0A40     		ands	r2, r2, r1
 330              	.LVL37:
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 331              		.loc 1 256 0
 332 004c 6068     		ldr	r0, [r4, #4]
 333 004e A168     		ldr	r1, [r4, #8]
 334 0050 0843     		orrs	r0, r0, r1
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 30


 335              		.loc 1 257 0
 336 0052 E168     		ldr	r1, [r4, #12]
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 337              		.loc 1 256 0
 338 0054 0843     		orrs	r0, r0, r1
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 339              		.loc 1 257 0
 340 0056 2169     		ldr	r1, [r4, #16]
 341 0058 0843     		orrs	r0, r0, r1
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 342              		.loc 1 258 0
 343 005a 6169     		ldr	r1, [r4, #20]
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 344              		.loc 1 257 0
 345 005c 0843     		orrs	r0, r0, r1
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 346              		.loc 1 258 0
 347 005e A169     		ldr	r1, [r4, #24]
 348 0060 0843     		orrs	r0, r0, r1
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 349              		.loc 1 259 0
 350 0062 E169     		ldr	r1, [r4, #28]
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 351              		.loc 1 258 0
 352 0064 0843     		orrs	r0, r0, r1
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 353              		.loc 1 259 0
 354 0066 216A     		ldr	r1, [r4, #32]
 355 0068 0143     		orrs	r1, r1, r0
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 356              		.loc 1 256 0
 357 006a 0A43     		orrs	r2, r2, r1
 358              	.LVL38:
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 359              		.loc 1 262 0
 360 006c 616A     		ldr	r1, [r4, #36]
 361 006e 0429     		cmp	r1, #4
 362 0070 03D1     		bne	.L34
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 363              		.loc 1 265 0
 364 0072 E06A     		ldr	r0, [r4, #44]
 365 0074 216B     		ldr	r1, [r4, #48]
 366 0076 0143     		orrs	r1, r1, r0
 367 0078 0A43     		orrs	r2, r2, r1
 368              	.LVL39:
 369              	.L34:
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 370              		.loc 1 269 0
 371 007a 1A60     		str	r2, [r3]
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 372              		.loc 1 272 0
 373 007c 2568     		ldr	r5, [r4]
 374              	.LVL40:
 375 007e 6E69     		ldr	r6, [r5, #20]
 376              	.LVL41:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 377              		.loc 1 275 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 31


 378 0080 26F00706 		bic	r6, r6, #7
 379              	.LVL42:
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 380              		.loc 1 278 0
 381 0084 636A     		ldr	r3, [r4, #36]
 382 0086 1E43     		orrs	r6, r6, r3
 383              	.LVL43:
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 384              		.loc 1 281 0
 385 0088 042B     		cmp	r3, #4
 386 008a 0DD1     		bne	.L35
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 387              		.loc 1 284 0
 388 008c A36A     		ldr	r3, [r4, #40]
 389 008e 1E43     		orrs	r6, r6, r3
 390              	.LVL44:
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 391              		.loc 1 288 0
 392 0090 E36A     		ldr	r3, [r4, #44]
 393 0092 4BB1     		cbz	r3, .L35
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 394              		.loc 1 290 0
 395 0094 2046     		mov	r0, r4
 396 0096 FFF7FEFF 		bl	DMA_CheckFifoParam
 397              	.LVL45:
 398 009a 28B1     		cbz	r0, .L35
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 399              		.loc 1 293 0
 400 009c 4023     		movs	r3, #64
 401 009e 6365     		str	r3, [r4, #84]
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 402              		.loc 1 296 0
 403 00a0 0120     		movs	r0, #1
 404 00a2 84F83500 		strb	r0, [r4, #53]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_ERROR; 
 405              		.loc 1 298 0
 406 00a6 70BD     		pop	{r4, r5, r6, pc}
 407              	.LVL46:
 408              	.L35:
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 409              		.loc 1 304 0
 410 00a8 6E61     		str	r6, [r5, #20]
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 411              		.loc 1 308 0
 412 00aa 2046     		mov	r0, r4
 413 00ac FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 414              	.LVL47:
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 415              		.loc 1 311 0
 416 00b0 E36D     		ldr	r3, [r4, #92]
 417 00b2 3F22     		movs	r2, #63
 418 00b4 02FA03F3 		lsl	r3, r2, r3
 419 00b8 8360     		str	r3, [r0, #8]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 420              		.loc 1 314 0
 421 00ba 0020     		movs	r0, #0
 422              	.LVL48:
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 32


 423 00bc 6065     		str	r0, [r4, #84]
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 424              		.loc 1 317 0
 425 00be 0123     		movs	r3, #1
 426 00c0 84F83530 		strb	r3, [r4, #53]
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 427              		.loc 1 319 0
 428 00c4 70BD     		pop	{r4, r5, r6, pc}
 429              	.LVL49:
 430              	.L36:
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 431              		.loc 1 198 0
 432 00c6 0120     		movs	r0, #1
 433              	.LVL50:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 434              		.loc 1 320 0
 435 00c8 70BD     		pop	{r4, r5, r6, pc}
 436              	.LVL51:
 437              	.L39:
 438 00ca 00BF     		.align	2
 439              	.L38:
 440 00cc 3F8010F0 		.word	-267354049
 441              		.cfi_endproc
 442              	.LFE123:
 444              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 445              		.align	2
 446              		.global	HAL_DMA_DeInit
 447              		.thumb
 448              		.thumb_func
 450              	HAL_DMA_DeInit:
 451              	.LFB124:
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 452              		.loc 1 329 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              	.LVL52:
 457 0000 38B5     		push	{r3, r4, r5, lr}
 458              	.LCFI3:
 459              		.cfi_def_cfa_offset 16
 460              		.cfi_offset 3, -16
 461              		.cfi_offset 4, -12
 462              		.cfi_offset 5, -8
 463              		.cfi_offset 14, -4
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
 464              		.loc 1 333 0
 465 0002 0446     		mov	r4, r0
 466 0004 28B3     		cbz	r0, .L42
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 467              		.loc 1 339 0
 468 0006 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 469 000a DBB2     		uxtb	r3, r3
 470 000c 022B     		cmp	r3, #2
 471 000e 22D0     		beq	.L43
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 472              		.loc 1 349 0
 473 0010 0368     		ldr	r3, [r0]
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 33


 474 0012 1A68     		ldr	r2, [r3]
 475 0014 22F00102 		bic	r2, r2, #1
 476 0018 1A60     		str	r2, [r3]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 477              		.loc 1 352 0
 478 001a 0368     		ldr	r3, [r0]
 479 001c 0025     		movs	r5, #0
 480 001e 1D60     		str	r5, [r3]
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 481              		.loc 1 355 0
 482 0020 0368     		ldr	r3, [r0]
 483 0022 5D60     		str	r5, [r3, #4]
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 484              		.loc 1 358 0
 485 0024 0368     		ldr	r3, [r0]
 486 0026 9D60     		str	r5, [r3, #8]
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 487              		.loc 1 361 0
 488 0028 0368     		ldr	r3, [r0]
 489 002a DD60     		str	r5, [r3, #12]
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 490              		.loc 1 364 0
 491 002c 0368     		ldr	r3, [r0]
 492 002e 1D61     		str	r5, [r3, #16]
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR  = 0x00000021U;
 493              		.loc 1 367 0
 494 0030 0368     		ldr	r3, [r0]
 495 0032 2122     		movs	r2, #33
 496 0034 5A61     		str	r2, [r3, #20]
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 497              		.loc 1 370 0
 498 0036 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 499              	.LVL53:
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 500              		.loc 1 373 0
 501 003a E36D     		ldr	r3, [r4, #92]
 502 003c 3F22     		movs	r2, #63
 503 003e 02FA03F3 		lsl	r3, r2, r3
 504 0042 8360     		str	r3, [r0, #8]
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 505              		.loc 1 376 0
 506 0044 6565     		str	r5, [r4, #84]
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 507              		.loc 1 379 0
 508 0046 84F83550 		strb	r5, [r4, #53]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 509              		.loc 1 382 0
 510 004a 84F83450 		strb	r5, [r4, #52]
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 511              		.loc 1 384 0
 512 004e 2846     		mov	r0, r5
 513              	.LVL54:
 514 0050 38BD     		pop	{r3, r4, r5, pc}
 515              	.LVL55:
 516              	.L42:
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 517              		.loc 1 335 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 34


 518 0052 0120     		movs	r0, #1
 519              	.LVL56:
 520 0054 38BD     		pop	{r3, r4, r5, pc}
 521              	.LVL57:
 522              	.L43:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_BUSY;
 523              		.loc 1 342 0
 524 0056 0220     		movs	r0, #2
 525              	.LVL58:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 526              		.loc 1 385 0
 527 0058 38BD     		pop	{r3, r4, r5, pc}
 528              		.cfi_endproc
 529              	.LFE124:
 531 005a 00BF     		.section	.text.HAL_DMA_Start,"ax",%progbits
 532              		.align	2
 533              		.global	HAL_DMA_Start
 534              		.thumb
 535              		.thumb_func
 537              	HAL_DMA_Start:
 538              	.LFB125:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 539              		.loc 1 419 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              	.LVL59:
 544 0000 38B5     		push	{r3, r4, r5, lr}
 545              	.LCFI4:
 546              		.cfi_def_cfa_offset 16
 547              		.cfi_offset 3, -16
 548              		.cfi_offset 4, -12
 549              		.cfi_offset 5, -8
 550              		.cfi_offset 14, -4
 551 0002 0446     		mov	r4, r0
 552              	.LVL60:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 553              		.loc 1 426 0
 554 0004 90F83400 		ldrb	r0, [r0, #52]	@ zero_extendqisi2
 555              	.LVL61:
 556 0008 0128     		cmp	r0, #1
 557 000a 1BD0     		beq	.L48
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 558              		.loc 1 426 0 is_stmt 0 discriminator 2
 559 000c 0120     		movs	r0, #1
 560 000e 84F83400 		strb	r0, [r4, #52]
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 561              		.loc 1 428 0 is_stmt 1 discriminator 2
 562 0012 94F83500 		ldrb	r0, [r4, #53]	@ zero_extendqisi2
 563 0016 C0B2     		uxtb	r0, r0
 564 0018 0128     		cmp	r0, #1
 565 001a 0ED1     		bne	.L46
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 566              		.loc 1 431 0
 567 001c 0220     		movs	r0, #2
 568 001e 84F83500 		strb	r0, [r4, #53]
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 35


 569              		.loc 1 434 0
 570 0022 0025     		movs	r5, #0
 571 0024 6565     		str	r5, [r4, #84]
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 572              		.loc 1 437 0
 573 0026 2046     		mov	r0, r4
 574 0028 FFF7FEFF 		bl	DMA_SetConfig
 575              	.LVL62:
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 576              		.loc 1 440 0
 577 002c 2368     		ldr	r3, [r4]
 578 002e 1A68     		ldr	r2, [r3]
 579 0030 42F00102 		orr	r2, r2, #1
 580 0034 1A60     		str	r2, [r3]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 581              		.loc 1 420 0
 582 0036 2846     		mov	r0, r5
 583 0038 38BD     		pop	{r3, r4, r5, pc}
 584              	.LVL63:
 585              	.L46:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 586              		.loc 1 445 0
 587 003a 0023     		movs	r3, #0
 588              	.LVL64:
 589 003c 84F83430 		strb	r3, [r4, #52]
 590              	.LVL65:
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 591              		.loc 1 448 0
 592 0040 0220     		movs	r0, #2
 593              	.LVL66:
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 594              		.loc 1 450 0
 595 0042 38BD     		pop	{r3, r4, r5, pc}
 596              	.LVL67:
 597              	.L48:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 598              		.loc 1 426 0
 599 0044 0220     		movs	r0, #2
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 600              		.loc 1 451 0
 601 0046 38BD     		pop	{r3, r4, r5, pc}
 602              		.cfi_endproc
 603              	.LFE125:
 605              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 606              		.align	2
 607              		.global	HAL_DMA_Start_IT
 608              		.thumb
 609              		.thumb_func
 611              	HAL_DMA_Start_IT:
 612              	.LFB126:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 613              		.loc 1 463 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              	.LVL68:
 618 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 36


 619              	.LCFI5:
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 3, -16
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 5, -8
 624              		.cfi_offset 14, -4
 625 0002 0446     		mov	r4, r0
 626              	.LVL69:
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 627              		.loc 1 467 0
 628 0004 856D     		ldr	r5, [r0, #88]
 629              	.LVL70:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 630              		.loc 1 473 0
 631 0006 90F83400 		ldrb	r0, [r0, #52]	@ zero_extendqisi2
 632              	.LVL71:
 633 000a 0128     		cmp	r0, #1
 634 000c 31D0     		beq	.L54
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 635              		.loc 1 473 0 is_stmt 0 discriminator 2
 636 000e 0120     		movs	r0, #1
 637 0010 84F83400 		strb	r0, [r4, #52]
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 638              		.loc 1 475 0 is_stmt 1 discriminator 2
 639 0014 94F83500 		ldrb	r0, [r4, #53]	@ zero_extendqisi2
 640 0018 C0B2     		uxtb	r0, r0
 641 001a 0128     		cmp	r0, #1
 642 001c 24D1     		bne	.L51
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 643              		.loc 1 478 0
 644 001e 0220     		movs	r0, #2
 645 0020 84F83500 		strb	r0, [r4, #53]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 646              		.loc 1 481 0
 647 0024 0020     		movs	r0, #0
 648 0026 6065     		str	r0, [r4, #84]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 649              		.loc 1 484 0
 650 0028 2046     		mov	r0, r4
 651 002a FFF7FEFF 		bl	DMA_SetConfig
 652              	.LVL72:
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 653              		.loc 1 487 0
 654 002e E36D     		ldr	r3, [r4, #92]
 655 0030 3F22     		movs	r2, #63
 656 0032 02FA03F3 		lsl	r3, r2, r3
 657 0036 AB60     		str	r3, [r5, #8]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 658              		.loc 1 490 0
 659 0038 2368     		ldr	r3, [r4]
 660 003a 1A68     		ldr	r2, [r3]
 661 003c 42F01602 		orr	r2, r2, #22
 662 0040 1A60     		str	r2, [r3]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 663              		.loc 1 491 0
 664 0042 2368     		ldr	r3, [r4]
 665 0044 5A69     		ldr	r2, [r3, #20]
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 37


 666 0046 42F08002 		orr	r2, r2, #128
 667 004a 5A61     		str	r2, [r3, #20]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 668              		.loc 1 493 0
 669 004c 236C     		ldr	r3, [r4, #64]
 670 004e 23B1     		cbz	r3, .L52
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 671              		.loc 1 495 0
 672 0050 2368     		ldr	r3, [r4]
 673 0052 1A68     		ldr	r2, [r3]
 674 0054 42F00802 		orr	r2, r2, #8
 675 0058 1A60     		str	r2, [r3]
 676              	.L52:
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 677              		.loc 1 499 0
 678 005a 2368     		ldr	r3, [r4]
 679 005c 1A68     		ldr	r2, [r3]
 680 005e 42F00102 		orr	r2, r2, #1
 681 0062 1A60     		str	r2, [r3]
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 682              		.loc 1 464 0
 683 0064 0020     		movs	r0, #0
 684 0066 38BD     		pop	{r3, r4, r5, pc}
 685              	.LVL73:
 686              	.L51:
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 687              		.loc 1 504 0
 688 0068 0023     		movs	r3, #0
 689              	.LVL74:
 690 006a 84F83430 		strb	r3, [r4, #52]
 691              	.LVL75:
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 692              		.loc 1 507 0
 693 006e 0220     		movs	r0, #2
 694              	.LVL76:
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 695              		.loc 1 510 0
 696 0070 38BD     		pop	{r3, r4, r5, pc}
 697              	.LVL77:
 698              	.L54:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 699              		.loc 1 473 0
 700 0072 0220     		movs	r0, #2
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 701              		.loc 1 511 0
 702 0074 38BD     		pop	{r3, r4, r5, pc}
 703              		.cfi_endproc
 704              	.LFE126:
 706 0076 00BF     		.section	.text.HAL_DMA_Abort,"ax",%progbits
 707              		.align	2
 708              		.global	HAL_DMA_Abort
 709              		.thumb
 710              		.thumb_func
 712              	HAL_DMA_Abort:
 713              	.LFB127:
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 714              		.loc 1 526 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 38


 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              	.LVL78:
 719 0000 70B5     		push	{r4, r5, r6, lr}
 720              	.LCFI6:
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 4, -16
 723              		.cfi_offset 5, -12
 724              		.cfi_offset 6, -8
 725              		.cfi_offset 14, -4
 726 0002 0446     		mov	r4, r0
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 727              		.loc 1 528 0
 728 0004 866D     		ldr	r6, [r0, #88]
 729              	.LVL79:
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 730              		.loc 1 530 0
 731 0006 FFF7FEFF 		bl	HAL_GetTick
 732              	.LVL80:
 733 000a 0546     		mov	r5, r0
 734              	.LVL81:
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 735              		.loc 1 532 0
 736 000c 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 737 0010 DBB2     		uxtb	r3, r3
 738 0012 022B     		cmp	r3, #2
 739 0014 06D0     		beq	.L56
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 740              		.loc 1 534 0
 741 0016 8023     		movs	r3, #128
 742 0018 6365     		str	r3, [r4, #84]
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 743              		.loc 1 537 0
 744 001a 0023     		movs	r3, #0
 745 001c 84F83430 		strb	r3, [r4, #52]
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 746              		.loc 1 539 0
 747 0020 0120     		movs	r0, #1
 748              	.LVL82:
 749 0022 70BD     		pop	{r4, r5, r6, pc}
 750              	.LVL83:
 751              	.L56:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 752              		.loc 1 544 0
 753 0024 2368     		ldr	r3, [r4]
 754 0026 1A68     		ldr	r2, [r3]
 755 0028 22F01602 		bic	r2, r2, #22
 756 002c 1A60     		str	r2, [r3]
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 757              		.loc 1 545 0
 758 002e 2368     		ldr	r3, [r4]
 759 0030 5A69     		ldr	r2, [r3, #20]
 760 0032 22F08002 		bic	r2, r2, #128
 761 0036 5A61     		str	r2, [r3, #20]
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 762              		.loc 1 547 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 39


 763 0038 236C     		ldr	r3, [r4, #64]
 764 003a 0BB9     		cbnz	r3, .L58
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 765              		.loc 1 547 0 is_stmt 0 discriminator 1
 766 003c A36C     		ldr	r3, [r4, #72]
 767 003e 23B1     		cbz	r3, .L59
 768              	.L58:
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 769              		.loc 1 549 0 is_stmt 1
 770 0040 2368     		ldr	r3, [r4]
 771 0042 1A68     		ldr	r2, [r3]
 772 0044 22F00802 		bic	r2, r2, #8
 773 0048 1A60     		str	r2, [r3]
 774              	.L59:
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 775              		.loc 1 553 0
 776 004a 2368     		ldr	r3, [r4]
 777 004c 1A68     		ldr	r2, [r3]
 778 004e 22F00102 		bic	r2, r2, #1
 779 0052 1A60     		str	r2, [r3]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 780              		.loc 1 556 0
 781 0054 0DE0     		b	.L60
 782              	.LVL84:
 783              	.L61:
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 784              		.loc 1 559 0
 785 0056 FFF7FEFF 		bl	HAL_GetTick
 786              	.LVL85:
 787 005a 401B     		subs	r0, r0, r5
 788 005c 0528     		cmp	r0, #5
 789 005e 08D9     		bls	.L60
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 790              		.loc 1 562 0
 791 0060 2023     		movs	r3, #32
 792 0062 6365     		str	r3, [r4, #84]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 793              		.loc 1 565 0
 794 0064 0023     		movs	r3, #0
 795 0066 84F83430 		strb	r3, [r4, #52]
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 796              		.loc 1 568 0
 797 006a 0320     		movs	r0, #3
 798 006c 84F83500 		strb	r0, [r4, #53]
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 799              		.loc 1 570 0
 800 0070 70BD     		pop	{r4, r5, r6, pc}
 801              	.LVL86:
 802              	.L60:
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 803              		.loc 1 556 0 discriminator 1
 804 0072 2368     		ldr	r3, [r4]
 805 0074 1B68     		ldr	r3, [r3]
 806 0076 13F0010F 		tst	r3, #1
 807 007a ECD1     		bne	.L61
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 808              		.loc 1 575 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 40


 809 007c E36D     		ldr	r3, [r4, #92]
 810 007e 3F22     		movs	r2, #63
 811 0080 02FA03F3 		lsl	r3, r2, r3
 812 0084 B360     		str	r3, [r6, #8]
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 813              		.loc 1 578 0
 814 0086 0020     		movs	r0, #0
 815 0088 84F83400 		strb	r0, [r4, #52]
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 816              		.loc 1 581 0
 817 008c 0123     		movs	r3, #1
 818 008e 84F83530 		strb	r3, [r4, #53]
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 819              		.loc 1 584 0
 820 0092 70BD     		pop	{r4, r5, r6, pc}
 821              		.cfi_endproc
 822              	.LFE127:
 824              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 825              		.align	2
 826              		.global	HAL_DMA_Abort_IT
 827              		.thumb
 828              		.thumb_func
 830              	HAL_DMA_Abort_IT:
 831              	.LFB128:
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 832              		.loc 1 593 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837              	.LVL87:
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 838              		.loc 1 594 0
 839 0000 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 840 0004 DBB2     		uxtb	r3, r3
 841 0006 022B     		cmp	r3, #2
 842 0008 03D0     		beq	.L64
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 843              		.loc 1 596 0
 844 000a 8023     		movs	r3, #128
 845 000c 4365     		str	r3, [r0, #84]
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 846              		.loc 1 597 0
 847 000e 0120     		movs	r0, #1
 848              	.LVL88:
 849 0010 7047     		bx	lr
 850              	.LVL89:
 851              	.L64:
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 852              		.loc 1 602 0
 853 0012 0523     		movs	r3, #5
 854 0014 80F83530 		strb	r3, [r0, #53]
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 855              		.loc 1 605 0
 856 0018 0368     		ldr	r3, [r0]
 857 001a 1A68     		ldr	r2, [r3]
 858 001c 22F00102 		bic	r2, r2, #1
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 41


 859 0020 1A60     		str	r2, [r3]
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 860              		.loc 1 608 0
 861 0022 0020     		movs	r0, #0
 862              	.LVL90:
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 863              		.loc 1 609 0
 864 0024 7047     		bx	lr
 865              		.cfi_endproc
 866              	.LFE128:
 868 0026 00BF     		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 869              		.align	2
 870              		.global	HAL_DMA_PollForTransfer
 871              		.thumb
 872              		.thumb_func
 874              	HAL_DMA_PollForTransfer:
 875              	.LFB129:
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 876              		.loc 1 623 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 8
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880              	.LVL91:
 881 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 882              	.LCFI7:
 883              		.cfi_def_cfa_offset 36
 884              		.cfi_offset 4, -36
 885              		.cfi_offset 5, -32
 886              		.cfi_offset 6, -28
 887              		.cfi_offset 7, -24
 888              		.cfi_offset 8, -20
 889              		.cfi_offset 9, -16
 890              		.cfi_offset 10, -12
 891              		.cfi_offset 11, -8
 892              		.cfi_offset 14, -4
 893 0004 83B0     		sub	sp, sp, #12
 894              	.LCFI8:
 895              		.cfi_def_cfa_offset 48
 896 0006 0446     		mov	r4, r0
 897 0008 0191     		str	r1, [sp, #4]
 898 000a 1546     		mov	r5, r2
 899              	.LVL92:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 900              		.loc 1 626 0
 901 000c FFF7FEFF 		bl	HAL_GetTick
 902              	.LVL93:
 903 0010 8346     		mov	fp, r0
 904              	.LVL94:
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 905              		.loc 1 632 0
 906 0012 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 907 0016 DBB2     		uxtb	r3, r3
 908 0018 022B     		cmp	r3, #2
 909 001a 06D0     		beq	.L67
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 910              		.loc 1 635 0
 911 001c 8023     		movs	r3, #128
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 42


 912 001e 6365     		str	r3, [r4, #84]
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 913              		.loc 1 636 0
 914 0020 0023     		movs	r3, #0
 915 0022 84F83430 		strb	r3, [r4, #52]
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 916              		.loc 1 637 0
 917 0026 0120     		movs	r0, #1
 918              	.LVL95:
 919 0028 7DE0     		b	.L68
 920              	.LVL96:
 921              	.L67:
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 922              		.loc 1 641 0
 923 002a 2368     		ldr	r3, [r4]
 924 002c 1B68     		ldr	r3, [r3]
 925 002e 13F4807F 		tst	r3, #256
 926 0032 04D0     		beq	.L69
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 927              		.loc 1 643 0
 928 0034 4FF48073 		mov	r3, #256
 929 0038 6365     		str	r3, [r4, #84]
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 930              		.loc 1 644 0
 931 003a 0120     		movs	r0, #1
 932              	.LVL97:
 933 003c 73E0     		b	.L68
 934              	.LVL98:
 935              	.L69:
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 936              		.loc 1 648 0
 937 003e 019B     		ldr	r3, [sp, #4]
 938 0040 1BB9     		cbnz	r3, .L70
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 939              		.loc 1 651 0
 940 0042 E36D     		ldr	r3, [r4, #92]
 941 0044 2027     		movs	r7, #32
 942 0046 9F40     		lsls	r7, r7, r3
 943              	.LVL99:
 944 0048 02E0     		b	.L71
 945              	.LVL100:
 946              	.L70:
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 947              		.loc 1 656 0
 948 004a E36D     		ldr	r3, [r4, #92]
 949 004c 1027     		movs	r7, #16
 950 004e 9F40     		lsls	r7, r7, r3
 951              	.LVL101:
 952              	.L71:
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 953              		.loc 1 659 0
 954 0050 A66D     		ldr	r6, [r4, #88]
 955              	.LVL102:
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 956              		.loc 1 660 0
 957 0052 3368     		ldr	r3, [r6]
 958              	.LVL103:
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 43


 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 959              		.loc 1 685 0
 960 0054 4FF0080A 		mov	r10, #8
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 961              		.loc 1 694 0
 962 0058 DFF8D090 		ldr	r9, .L83
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 963              		.loc 1 703 0
 964 005c DFF8D080 		ldr	r8, .L83+4
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 965              		.loc 1 662 0
 966 0060 32E0     		b	.L82
 967              	.LVL104:
 968              	.L79:
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 969              		.loc 1 665 0
 970 0062 B5F1FF3F 		cmp	r5, #-1
 971 0066 10D0     		beq	.L73
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 972              		.loc 1 667 0
 973 0068 2DB1     		cbz	r5, .L74
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 974              		.loc 1 667 0 is_stmt 0 discriminator 1
 975 006a FFF7FEFF 		bl	HAL_GetTick
 976              	.LVL105:
 977 006e CBEB0000 		rsb	r0, fp, r0
 978 0072 A842     		cmp	r0, r5
 979 0074 09D9     		bls	.L73
 980              	.L74:
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 981              		.loc 1 670 0 is_stmt 1
 982 0076 2023     		movs	r3, #32
 983 0078 6365     		str	r3, [r4, #84]
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 984              		.loc 1 673 0
 985 007a 0023     		movs	r3, #0
 986 007c 84F83430 		strb	r3, [r4, #52]
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 987              		.loc 1 676 0
 988 0080 0123     		movs	r3, #1
 989 0082 84F83530 		strb	r3, [r4, #53]
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 990              		.loc 1 678 0
 991 0086 0320     		movs	r0, #3
 992 0088 4DE0     		b	.L68
 993              	.L73:
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmpisr = regs->ISR;
 994              		.loc 1 683 0
 995 008a 3368     		ldr	r3, [r6]
 996              	.LVL106:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 997              		.loc 1 685 0
 998 008c E26D     		ldr	r2, [r4, #92]
 999 008e 0AFA02F2 		lsl	r2, r10, r2
 1000 0092 1A42     		tst	r2, r3
 1001 0094 04D0     		beq	.L75
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 44


 1002              		.loc 1 688 0
 1003 0096 616D     		ldr	r1, [r4, #84]
 1004 0098 41F00101 		orr	r1, r1, #1
 1005 009c 6165     		str	r1, [r4, #84]
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1006              		.loc 1 691 0
 1007 009e B260     		str	r2, [r6, #8]
 1008              	.L75:
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1009              		.loc 1 694 0
 1010 00a0 E26D     		ldr	r2, [r4, #92]
 1011 00a2 09FA02F2 		lsl	r2, r9, r2
 1012 00a6 1A42     		tst	r2, r3
 1013 00a8 04D0     		beq	.L76
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1014              		.loc 1 697 0
 1015 00aa 616D     		ldr	r1, [r4, #84]
 1016 00ac 41F00201 		orr	r1, r1, #2
 1017 00b0 6165     		str	r1, [r4, #84]
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1018              		.loc 1 700 0
 1019 00b2 B260     		str	r2, [r6, #8]
 1020              	.L76:
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1021              		.loc 1 703 0
 1022 00b4 E26D     		ldr	r2, [r4, #92]
 1023 00b6 08FA02F2 		lsl	r2, r8, r2
 1024 00ba 1A42     		tst	r2, r3
 1025 00bc 04D0     		beq	.L82
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1026              		.loc 1 706 0
 1027 00be 616D     		ldr	r1, [r4, #84]
 1028 00c0 41F00401 		orr	r1, r1, #4
 1029 00c4 6165     		str	r1, [r4, #84]
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1030              		.loc 1 709 0
 1031 00c6 B260     		str	r2, [r6, #8]
 1032              	.L82:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 1033              		.loc 1 662 0 discriminator 1
 1034 00c8 3B42     		tst	r3, r7
 1035 00ca 03D1     		bne	.L78
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 1036              		.loc 1 662 0 is_stmt 0 discriminator 2
 1037 00cc 636D     		ldr	r3, [r4, #84]
 1038              	.LVL107:
 1039 00ce 13F0010F 		tst	r3, #1
 1040 00d2 C6D0     		beq	.L79
 1041              	.L78:
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1042              		.loc 1 713 0 is_stmt 1
 1043 00d4 636D     		ldr	r3, [r4, #84]
 1044 00d6 93B1     		cbz	r3, .L80
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1045              		.loc 1 715 0
 1046 00d8 636D     		ldr	r3, [r4, #84]
 1047 00da 13F0010F 		tst	r3, #1
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 45


 1048 00de 0ED0     		beq	.L80
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 1049              		.loc 1 717 0
 1050 00e0 2046     		mov	r0, r4
 1051 00e2 FFF7FEFF 		bl	HAL_DMA_Abort
 1052              	.LVL108:
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1053              		.loc 1 720 0
 1054 00e6 E36D     		ldr	r3, [r4, #92]
 1055 00e8 3022     		movs	r2, #48
 1056 00ea 02FA03F3 		lsl	r3, r2, r3
 1057 00ee B360     		str	r3, [r6, #8]
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1058              		.loc 1 723 0
 1059 00f0 0023     		movs	r3, #0
 1060 00f2 84F83430 		strb	r3, [r4, #52]
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1061              		.loc 1 726 0
 1062 00f6 0120     		movs	r0, #1
 1063 00f8 84F83500 		strb	r0, [r4, #53]
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_ERROR;
 1064              		.loc 1 728 0
 1065 00fc 13E0     		b	.L68
 1066              	.L80:
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1067              		.loc 1 733 0
 1068 00fe 019B     		ldr	r3, [sp, #4]
 1069 0100 5BB9     		cbnz	r3, .L81
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1070              		.loc 1 736 0
 1071 0102 E36D     		ldr	r3, [r4, #92]
 1072 0104 3022     		movs	r2, #48
 1073 0106 02FA03F3 		lsl	r3, r2, r3
 1074 010a B360     		str	r3, [r6, #8]
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1075              		.loc 1 739 0
 1076 010c 0020     		movs	r0, #0
 1077 010e 84F83400 		strb	r0, [r4, #52]
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1078              		.loc 1 741 0
 1079 0112 0123     		movs	r3, #1
 1080 0114 84F83530 		strb	r3, [r4, #53]
 1081 0118 05E0     		b	.L68
 1082              	.L81:
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 1083              		.loc 1 746 0
 1084 011a E36D     		ldr	r3, [r4, #92]
 1085 011c 1022     		movs	r2, #16
 1086 011e 02FA03F3 		lsl	r3, r2, r3
 1087 0122 B360     		str	r3, [r6, #8]
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1088              		.loc 1 749 0
 1089 0124 0020     		movs	r0, #0
 1090              	.LVL109:
 1091              	.L68:
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1092              		.loc 1 750 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 46


 1093 0126 03B0     		add	sp, sp, #12
 1094              		@ sp needed
 1095 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1096              	.LVL110:
 1097              	.L84:
 1098              		.align	2
 1099              	.L83:
 1100 012c 01008000 		.word	8388609
 1101 0130 04008000 		.word	8388612
 1102              		.cfi_endproc
 1103              	.LFE129:
 1105              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1106              		.align	2
 1107              		.global	HAL_DMA_IRQHandler
 1108              		.thumb
 1109              		.thumb_func
 1111              	HAL_DMA_IRQHandler:
 1112              	.LFB130:
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1113              		.loc 1 759 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 8
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              	.LVL111:
 1118 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1119              	.LCFI9:
 1120              		.cfi_def_cfa_offset 20
 1121              		.cfi_offset 4, -20
 1122              		.cfi_offset 5, -16
 1123              		.cfi_offset 6, -12
 1124              		.cfi_offset 7, -8
 1125              		.cfi_offset 14, -4
 1126 0002 83B0     		sub	sp, sp, #12
 1127              	.LCFI10:
 1128              		.cfi_def_cfa_offset 32
 1129 0004 0446     		mov	r4, r0
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t count = 0U;
 1130              		.loc 1 761 0
 1131 0006 0023     		movs	r3, #0
 1132 0008 0193     		str	r3, [sp, #4]
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 1133              		.loc 1 762 0
 1134 000a 744B     		ldr	r3, .L105
 1135 000c 1E68     		ldr	r6, [r3]
 1136 000e 744B     		ldr	r3, .L105+4
 1137 0010 A3FB0626 		umull	r2, r6, r3, r6
 1138 0014 B60A     		lsrs	r6, r6, #10
 1139              	.LVL112:
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1140              		.loc 1 765 0
 1141 0016 876D     		ldr	r7, [r0, #88]
 1142              	.LVL113:
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 1143              		.loc 1 767 0
 1144 0018 3D68     		ldr	r5, [r7]
 1145              	.LVL114:
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 47


 1146              		.loc 1 770 0
 1147 001a C36D     		ldr	r3, [r0, #92]
 1148 001c 0822     		movs	r2, #8
 1149 001e 02FA03F3 		lsl	r3, r2, r3
 1150 0022 2B42     		tst	r3, r5
 1151 0024 11D0     		beq	.L86
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 1152              		.loc 1 772 0
 1153 0026 0368     		ldr	r3, [r0]
 1154 0028 1A68     		ldr	r2, [r3]
 1155 002a 12F0040F 		tst	r2, #4
 1156 002e 0CD0     		beq	.L86
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 1157              		.loc 1 775 0
 1158 0030 1A68     		ldr	r2, [r3]
 1159 0032 22F00402 		bic	r2, r2, #4
 1160 0036 1A60     		str	r2, [r3]
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1161              		.loc 1 778 0
 1162 0038 C36D     		ldr	r3, [r0, #92]
 1163 003a 0822     		movs	r2, #8
 1164 003c 02FA03F3 		lsl	r3, r2, r3
 1165 0040 BB60     		str	r3, [r7, #8]
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1166              		.loc 1 781 0
 1167 0042 436D     		ldr	r3, [r0, #84]
 1168 0044 43F00103 		orr	r3, r3, #1
 1169 0048 4365     		str	r3, [r0, #84]
 1170              	.L86:
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1171              		.loc 1 785 0
 1172 004a E36D     		ldr	r3, [r4, #92]
 1173 004c 654A     		ldr	r2, .L105+8
 1174 004e 02FA03F3 		lsl	r3, r2, r3
 1175 0052 2B42     		tst	r3, r5
 1176 0054 09D0     		beq	.L87
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 1177              		.loc 1 787 0
 1178 0056 2268     		ldr	r2, [r4]
 1179 0058 5269     		ldr	r2, [r2, #20]
 1180 005a 12F0800F 		tst	r2, #128
 1181 005e 04D0     		beq	.L87
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1182              		.loc 1 790 0
 1183 0060 BB60     		str	r3, [r7, #8]
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1184              		.loc 1 793 0
 1185 0062 636D     		ldr	r3, [r4, #84]
 1186 0064 43F00203 		orr	r3, r3, #2
 1187 0068 6365     		str	r3, [r4, #84]
 1188              	.L87:
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1189              		.loc 1 797 0
 1190 006a E36D     		ldr	r3, [r4, #92]
 1191 006c 5E4A     		ldr	r2, .L105+12
 1192 006e 02FA03F3 		lsl	r3, r2, r3
 1193 0072 2B42     		tst	r3, r5
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 48


 1194 0074 09D0     		beq	.L88
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 1195              		.loc 1 799 0
 1196 0076 2268     		ldr	r2, [r4]
 1197 0078 1268     		ldr	r2, [r2]
 1198 007a 12F0020F 		tst	r2, #2
 1199 007e 04D0     		beq	.L88
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1200              		.loc 1 802 0
 1201 0080 BB60     		str	r3, [r7, #8]
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1202              		.loc 1 805 0
 1203 0082 636D     		ldr	r3, [r4, #84]
 1204 0084 43F00403 		orr	r3, r3, #4
 1205 0088 6365     		str	r3, [r4, #84]
 1206              	.L88:
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 1207              		.loc 1 809 0
 1208 008a E36D     		ldr	r3, [r4, #92]
 1209 008c 1022     		movs	r2, #16
 1210 008e 02FA03F3 		lsl	r3, r2, r3
 1211 0092 2B42     		tst	r3, r5
 1212 0094 24D0     		beq	.L89
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 1213              		.loc 1 811 0
 1214 0096 2268     		ldr	r2, [r4]
 1215 0098 1268     		ldr	r2, [r2]
 1216 009a 12F0080F 		tst	r2, #8
 1217 009e 1FD0     		beq	.L89
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1218              		.loc 1 814 0
 1219 00a0 BB60     		str	r3, [r7, #8]
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1220              		.loc 1 817 0
 1221 00a2 2368     		ldr	r3, [r4]
 1222 00a4 1A68     		ldr	r2, [r3]
 1223 00a6 12F4802F 		tst	r2, #262144
 1224 00aa 0DD0     		beq	.L90
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1225              		.loc 1 820 0
 1226 00ac 1B68     		ldr	r3, [r3]
 1227 00ae 13F4002F 		tst	r3, #524288
 1228 00b2 04D1     		bne	.L91
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 1229              		.loc 1 822 0
 1230 00b4 236C     		ldr	r3, [r4, #64]
 1231 00b6 9BB1     		cbz	r3, .L89
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 1232              		.loc 1 825 0
 1233 00b8 2046     		mov	r0, r4
 1234              	.LVL115:
 1235 00ba 9847     		blx	r3
 1236              	.LVL116:
 1237 00bc 10E0     		b	.L89
 1238              	.LVL117:
 1239              	.L91:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 49


 1240              		.loc 1 831 0
 1241 00be A36C     		ldr	r3, [r4, #72]
 1242 00c0 73B1     		cbz	r3, .L89
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 1243              		.loc 1 834 0
 1244 00c2 2046     		mov	r0, r4
 1245              	.LVL118:
 1246 00c4 9847     		blx	r3
 1247              	.LVL119:
 1248 00c6 0BE0     		b	.L89
 1249              	.LVL120:
 1250              	.L90:
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1251              		.loc 1 841 0
 1252 00c8 1A68     		ldr	r2, [r3]
 1253 00ca 12F4807F 		tst	r2, #256
 1254 00ce 03D1     		bne	.L92
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1255              		.loc 1 844 0
 1256 00d0 1A68     		ldr	r2, [r3]
 1257 00d2 22F00802 		bic	r2, r2, #8
 1258 00d6 1A60     		str	r2, [r3]
 1259              	.L92:
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 1260              		.loc 1 847 0
 1261 00d8 236C     		ldr	r3, [r4, #64]
 1262 00da 0BB1     		cbz	r3, .L89
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 1263              		.loc 1 850 0
 1264 00dc 2046     		mov	r0, r4
 1265              	.LVL121:
 1266 00de 9847     		blx	r3
 1267              	.LVL122:
 1268              	.L89:
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 1269              		.loc 1 856 0
 1270 00e0 E36D     		ldr	r3, [r4, #92]
 1271 00e2 2022     		movs	r2, #32
 1272 00e4 02FA03F3 		lsl	r3, r2, r3
 1273 00e8 2B42     		tst	r3, r5
 1274 00ea 53D0     		beq	.L93
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 1275              		.loc 1 858 0
 1276 00ec 2268     		ldr	r2, [r4]
 1277 00ee 1268     		ldr	r2, [r2]
 1278 00f0 12F0100F 		tst	r2, #16
 1279 00f4 4ED0     		beq	.L93
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1280              		.loc 1 861 0
 1281 00f6 BB60     		str	r3, [r7, #8]
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 1282              		.loc 1 863 0
 1283 00f8 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 1284 00fc DBB2     		uxtb	r3, r3
 1285 00fe 052B     		cmp	r3, #5
 1286 0100 23D1     		bne	.L94
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 50


 1287              		.loc 1 866 0
 1288 0102 2368     		ldr	r3, [r4]
 1289 0104 1A68     		ldr	r2, [r3]
 1290 0106 22F01602 		bic	r2, r2, #22
 1291 010a 1A60     		str	r2, [r3]
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1292              		.loc 1 867 0
 1293 010c 2368     		ldr	r3, [r4]
 1294 010e 5A69     		ldr	r2, [r3, #20]
 1295 0110 22F08002 		bic	r2, r2, #128
 1296 0114 5A61     		str	r2, [r3, #20]
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1297              		.loc 1 869 0
 1298 0116 236C     		ldr	r3, [r4, #64]
 1299 0118 0BB9     		cbnz	r3, .L95
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1300              		.loc 1 869 0 is_stmt 0 discriminator 1
 1301 011a A36C     		ldr	r3, [r4, #72]
 1302 011c 23B1     		cbz	r3, .L96
 1303              	.L95:
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1304              		.loc 1 871 0 is_stmt 1
 1305 011e 2368     		ldr	r3, [r4]
 1306 0120 1A68     		ldr	r2, [r3]
 1307 0122 22F00802 		bic	r2, r2, #8
 1308 0126 1A60     		str	r2, [r3]
 1309              	.L96:
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 1310              		.loc 1 875 0
 1311 0128 E36D     		ldr	r3, [r4, #92]
 1312 012a 3F22     		movs	r2, #63
 1313 012c 02FA03F3 		lsl	r3, r2, r3
 1314 0130 BB60     		str	r3, [r7, #8]
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1315              		.loc 1 878 0
 1316 0132 0023     		movs	r3, #0
 1317 0134 84F83430 		strb	r3, [r4, #52]
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1318              		.loc 1 881 0
 1319 0138 0123     		movs	r3, #1
 1320 013a 84F83530 		strb	r3, [r4, #53]
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 1321              		.loc 1 883 0
 1322 013e 236D     		ldr	r3, [r4, #80]
 1323 0140 002B     		cmp	r3, #0
 1324 0142 49D0     		beq	.L85
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 1325              		.loc 1 885 0
 1326 0144 2046     		mov	r0, r4
 1327 0146 9847     		blx	r3
 1328              	.LVL123:
 1329 0148 46E0     		b	.L85
 1330              	.L94:
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1331              		.loc 1 890 0
 1332 014a 2368     		ldr	r3, [r4]
 1333 014c 1A68     		ldr	r2, [r3]
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 51


 1334 014e 12F4802F 		tst	r2, #262144
 1335 0152 0DD0     		beq	.L98
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1336              		.loc 1 893 0
 1337 0154 1B68     		ldr	r3, [r3]
 1338 0156 13F4002F 		tst	r3, #524288
 1339 015a 04D1     		bne	.L99
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 1340              		.loc 1 895 0
 1341 015c 636C     		ldr	r3, [r4, #68]
 1342 015e CBB1     		cbz	r3, .L93
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 1343              		.loc 1 898 0
 1344 0160 2046     		mov	r0, r4
 1345 0162 9847     		blx	r3
 1346              	.LVL124:
 1347 0164 16E0     		b	.L93
 1348              	.L99:
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 1349              		.loc 1 904 0
 1350 0166 E36B     		ldr	r3, [r4, #60]
 1351 0168 A3B1     		cbz	r3, .L93
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 1352              		.loc 1 907 0
 1353 016a 2046     		mov	r0, r4
 1354 016c 9847     		blx	r3
 1355              	.LVL125:
 1356 016e 11E0     		b	.L93
 1357              	.L98:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1358              		.loc 1 914 0
 1359 0170 1A68     		ldr	r2, [r3]
 1360 0172 12F4807F 		tst	r2, #256
 1361 0176 09D1     		bne	.L100
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 1362              		.loc 1 917 0
 1363 0178 1A68     		ldr	r2, [r3]
 1364 017a 22F01002 		bic	r2, r2, #16
 1365 017e 1A60     		str	r2, [r3]
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 1366              		.loc 1 920 0
 1367 0180 0023     		movs	r3, #0
 1368 0182 84F83430 		strb	r3, [r4, #52]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 1369              		.loc 1 923 0
 1370 0186 0123     		movs	r3, #1
 1371 0188 84F83530 		strb	r3, [r4, #53]
 1372              	.L100:
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 1373              		.loc 1 926 0
 1374 018c E36B     		ldr	r3, [r4, #60]
 1375 018e 0BB1     		cbz	r3, .L93
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 1376              		.loc 1 929 0
 1377 0190 2046     		mov	r0, r4
 1378 0192 9847     		blx	r3
 1379              	.LVL126:
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 52


 1380              	.L93:
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1381              		.loc 1 936 0
 1382 0194 636D     		ldr	r3, [r4, #84]
 1383 0196 FBB1     		cbz	r3, .L85
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1384              		.loc 1 938 0
 1385 0198 636D     		ldr	r3, [r4, #84]
 1386 019a 13F0010F 		tst	r3, #1
 1387 019e 17D0     		beq	.L101
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 1388              		.loc 1 940 0
 1389 01a0 0523     		movs	r3, #5
 1390 01a2 84F83530 		strb	r3, [r4, #53]
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 1391              		.loc 1 943 0
 1392 01a6 2368     		ldr	r3, [r4]
 1393 01a8 1A68     		ldr	r2, [r3]
 1394 01aa 22F00102 		bic	r2, r2, #1
 1395 01ae 1A60     		str	r2, [r3]
 1396              	.L103:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if (++count > timeout)
 1397              		.loc 1 947 0
 1398 01b0 019B     		ldr	r3, [sp, #4]
 1399 01b2 0133     		adds	r3, r3, #1
 1400 01b4 0193     		str	r3, [sp, #4]
 1401 01b6 9E42     		cmp	r6, r3
 1402 01b8 04D3     		bcc	.L102
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 1403              		.loc 1 952 0
 1404 01ba 2368     		ldr	r3, [r4]
 1405 01bc 1B68     		ldr	r3, [r3]
 1406 01be 13F0010F 		tst	r3, #1
 1407 01c2 F5D1     		bne	.L103
 1408              	.L102:
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1409              		.loc 1 955 0
 1410 01c4 0023     		movs	r3, #0
 1411 01c6 84F83430 		strb	r3, [r4, #52]
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1412              		.loc 1 958 0
 1413 01ca 0123     		movs	r3, #1
 1414 01cc 84F83530 		strb	r3, [r4, #53]
 1415              	.L101:
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 1416              		.loc 1 961 0
 1417 01d0 E36C     		ldr	r3, [r4, #76]
 1418 01d2 0BB1     		cbz	r3, .L85
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1419              		.loc 1 964 0
 1420 01d4 2046     		mov	r0, r4
 1421 01d6 9847     		blx	r3
 1422              	.LVL127:
 1423              	.L85:
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1424              		.loc 1 967 0
 1425 01d8 03B0     		add	sp, sp, #12
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 53


 1426              		@ sp needed
 1427 01da F0BD     		pop	{r4, r5, r6, r7, pc}
 1428              	.LVL128:
 1429              	.L106:
 1430              		.align	2
 1431              	.L105:
 1432 01dc 00000000 		.word	SystemCoreClock
 1433 01e0 B5814E1B 		.word	458129845
 1434 01e4 01008000 		.word	8388609
 1435 01e8 04008000 		.word	8388612
 1436              		.cfi_endproc
 1437              	.LFE130:
 1439              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1440              		.align	2
 1441              		.global	HAL_DMA_RegisterCallback
 1442              		.thumb
 1443              		.thumb_func
 1445              	HAL_DMA_RegisterCallback:
 1446              	.LFB131:
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1447              		.loc 1 980 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
 1452              	.LVL129:
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1453              		.loc 1 985 0
 1454 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1455 0004 012B     		cmp	r3, #1
 1456 0006 28D0     		beq	.L117
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1457              		.loc 1 985 0 is_stmt 0 discriminator 2
 1458 0008 0123     		movs	r3, #1
 1459 000a 80F83430 		strb	r3, [r0, #52]
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1460              		.loc 1 987 0 is_stmt 1 discriminator 2
 1461 000e 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1462 0012 DBB2     		uxtb	r3, r3
 1463 0014 012B     		cmp	r3, #1
 1464 0016 18D1     		bne	.L118
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1465              		.loc 1 989 0
 1466 0018 0529     		cmp	r1, #5
 1467 001a 18D8     		bhi	.L119
 1468 001c DFE801F0 		tbb	[pc, r1]
 1469              	.L111:
 1470 0020 03       		.byte	(.L110-.L111)/2
 1471 0021 06       		.byte	(.L112-.L111)/2
 1472 0022 09       		.byte	(.L113-.L111)/2
 1473 0023 0C       		.byte	(.L114-.L111)/2
 1474 0024 0F       		.byte	(.L115-.L111)/2
 1475 0025 12       		.byte	(.L116-.L111)/2
 1476              		.align	1
 1477              	.L110:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 1478              		.loc 1 992 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 54


 1479 0026 C263     		str	r2, [r0, #60]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1480              		.loc 1 982 0
 1481 0028 0022     		movs	r2, #0
 1482              	.LVL130:
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1483              		.loc 1 993 0
 1484 002a 11E0     		b	.L109
 1485              	.LVL131:
 1486              	.L112:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 1487              		.loc 1 996 0
 1488 002c 0264     		str	r2, [r0, #64]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1489              		.loc 1 982 0
 1490 002e 0022     		movs	r2, #0
 1491              	.LVL132:
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1492              		.loc 1 997 0
 1493 0030 0EE0     		b	.L109
 1494              	.LVL133:
 1495              	.L113:
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 1496              		.loc 1 1000 0
 1497 0032 4264     		str	r2, [r0, #68]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1498              		.loc 1 982 0
 1499 0034 0022     		movs	r2, #0
 1500              	.LVL134:
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1501              		.loc 1 1001 0
 1502 0036 0BE0     		b	.L109
 1503              	.LVL135:
 1504              	.L114:
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 1505              		.loc 1 1004 0
 1506 0038 8264     		str	r2, [r0, #72]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1507              		.loc 1 982 0
 1508 003a 0022     		movs	r2, #0
 1509              	.LVL136:
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1510              		.loc 1 1005 0
 1511 003c 08E0     		b	.L109
 1512              	.LVL137:
 1513              	.L115:
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 1514              		.loc 1 1008 0
 1515 003e C264     		str	r2, [r0, #76]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1516              		.loc 1 982 0
 1517 0040 0022     		movs	r2, #0
 1518              	.LVL138:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1519              		.loc 1 1009 0
 1520 0042 05E0     		b	.L109
 1521              	.LVL139:
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 55


 1522              	.L116:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 1523              		.loc 1 1012 0
 1524 0044 0265     		str	r2, [r0, #80]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1525              		.loc 1 982 0
 1526 0046 0022     		movs	r2, #0
 1527              	.LVL140:
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1528              		.loc 1 1013 0
 1529 0048 02E0     		b	.L109
 1530              	.LVL141:
 1531              	.L118:
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status =  HAL_ERROR;
 1532              		.loc 1 1022 0
 1533 004a 0122     		movs	r2, #1
 1534              	.LVL142:
 1535 004c 00E0     		b	.L109
 1536              	.LVL143:
 1537              	.L119:
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1538              		.loc 1 982 0
 1539 004e 0022     		movs	r2, #0
 1540              	.LVL144:
 1541              	.L109:
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1542              		.loc 1 1026 0
 1543 0050 0023     		movs	r3, #0
 1544 0052 80F83430 		strb	r3, [r0, #52]
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1545              		.loc 1 1028 0
 1546 0056 1046     		mov	r0, r2
 1547              	.LVL145:
 1548 0058 7047     		bx	lr
 1549              	.LVL146:
 1550              	.L117:
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1551              		.loc 1 985 0
 1552 005a 0220     		movs	r0, #2
 1553              	.LVL147:
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1554              		.loc 1 1029 0
 1555 005c 7047     		bx	lr
 1556              		.cfi_endproc
 1557              	.LFE131:
 1559 005e 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1560              		.align	2
 1561              		.global	HAL_DMA_UnRegisterCallback
 1562              		.thumb
 1563              		.thumb_func
 1565              	HAL_DMA_UnRegisterCallback:
 1566              	.LFB132:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1567              		.loc 1 1040 0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 56


 1571              		@ link register save eliminated.
 1572              	.LVL148:
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1573              		.loc 1 1044 0
 1574 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1575 0004 012B     		cmp	r3, #1
 1576 0006 31D0     		beq	.L131
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1577              		.loc 1 1044 0 is_stmt 0 discriminator 2
 1578 0008 0123     		movs	r3, #1
 1579 000a 80F83430 		strb	r3, [r0, #52]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1580              		.loc 1 1046 0 is_stmt 1 discriminator 2
 1581 000e 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1582 0012 DBB2     		uxtb	r3, r3
 1583 0014 012B     		cmp	r3, #1
 1584 0016 21D1     		bne	.L132
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1585              		.loc 1 1048 0
 1586 0018 0629     		cmp	r1, #6
 1587 001a 21D8     		bhi	.L133
 1588 001c DFE801F0 		tbb	[pc, r1]
 1589              	.L124:
 1590 0020 04       		.byte	(.L123-.L124)/2
 1591 0021 07       		.byte	(.L125-.L124)/2
 1592 0022 0A       		.byte	(.L126-.L124)/2
 1593 0023 0D       		.byte	(.L127-.L124)/2
 1594 0024 10       		.byte	(.L128-.L124)/2
 1595 0025 13       		.byte	(.L129-.L124)/2
 1596 0026 16       		.byte	(.L130-.L124)/2
 1597 0027 00       		.align	1
 1598              	.L123:
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1599              		.loc 1 1051 0
 1600 0028 0022     		movs	r2, #0
 1601 002a C263     		str	r2, [r0, #60]
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1602              		.loc 1 1052 0
 1603 002c 19E0     		b	.L122
 1604              	.L125:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1605              		.loc 1 1055 0
 1606 002e 0022     		movs	r2, #0
 1607 0030 0264     		str	r2, [r0, #64]
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1608              		.loc 1 1056 0
 1609 0032 16E0     		b	.L122
 1610              	.L126:
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1611              		.loc 1 1059 0
 1612 0034 0022     		movs	r2, #0
 1613 0036 4264     		str	r2, [r0, #68]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1614              		.loc 1 1060 0
 1615 0038 13E0     		b	.L122
 1616              	.L127:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 57


 1617              		.loc 1 1063 0
 1618 003a 0022     		movs	r2, #0
 1619 003c 8264     		str	r2, [r0, #72]
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1620              		.loc 1 1064 0
 1621 003e 10E0     		b	.L122
 1622              	.L128:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1623              		.loc 1 1067 0
 1624 0040 0022     		movs	r2, #0
 1625 0042 C264     		str	r2, [r0, #76]
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1626              		.loc 1 1068 0
 1627 0044 0DE0     		b	.L122
 1628              	.L129:
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1629              		.loc 1 1071 0
 1630 0046 0022     		movs	r2, #0
 1631 0048 0265     		str	r2, [r0, #80]
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1632              		.loc 1 1072 0
 1633 004a 0AE0     		b	.L122
 1634              	.L130:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1635              		.loc 1 1075 0
 1636 004c 0022     		movs	r2, #0
 1637 004e C263     		str	r2, [r0, #60]
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1638              		.loc 1 1076 0
 1639 0050 0264     		str	r2, [r0, #64]
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1640              		.loc 1 1077 0
 1641 0052 4264     		str	r2, [r0, #68]
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1642              		.loc 1 1078 0
 1643 0054 8264     		str	r2, [r0, #72]
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1644              		.loc 1 1079 0
 1645 0056 C264     		str	r2, [r0, #76]
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1646              		.loc 1 1080 0
 1647 0058 0265     		str	r2, [r0, #80]
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1648              		.loc 1 1081 0
 1649 005a 02E0     		b	.L122
 1650              	.L132:
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_ERROR;
 1651              		.loc 1 1090 0
 1652 005c 0122     		movs	r2, #1
 1653 005e 00E0     		b	.L122
 1654              	.L133:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 1655              		.loc 1 1084 0
 1656 0060 0122     		movs	r2, #1
 1657              	.L122:
 1658              	.LVL149:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 58


 1659              		.loc 1 1094 0
 1660 0062 0023     		movs	r3, #0
 1661 0064 80F83430 		strb	r3, [r0, #52]
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1662              		.loc 1 1096 0
 1663 0068 1046     		mov	r0, r2
 1664              	.LVL150:
 1665 006a 7047     		bx	lr
 1666              	.LVL151:
 1667              	.L131:
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1668              		.loc 1 1044 0
 1669 006c 0220     		movs	r0, #2
 1670              	.LVL152:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1671              		.loc 1 1097 0
 1672 006e 7047     		bx	lr
 1673              		.cfi_endproc
 1674              	.LFE132:
 1676              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1677              		.align	2
 1678              		.global	HAL_DMA_GetState
 1679              		.thumb
 1680              		.thumb_func
 1682              	HAL_DMA_GetState:
 1683              	.LFB133:
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1684              		.loc 1 1125 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              		@ link register save eliminated.
 1689              	.LVL153:
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->State;
 1690              		.loc 1 1126 0
 1691 0000 90F83500 		ldrb	r0, [r0, #53]	@ zero_extendqisi2
 1692              	.LVL154:
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1693              		.loc 1 1127 0
 1694 0004 7047     		bx	lr
 1695              		.cfi_endproc
 1696              	.LFE133:
 1698 0006 00BF     		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1699              		.align	2
 1700              		.global	HAL_DMA_GetError
 1701              		.thumb
 1702              		.thumb_func
 1704              	HAL_DMA_GetError:
 1705              	.LFB134:
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1706              		.loc 1 1136 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              		@ link register save eliminated.
 1711              	.LVL155:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->ErrorCode;
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 59


 1712              		.loc 1 1137 0
 1713 0000 406D     		ldr	r0, [r0, #84]
 1714              	.LVL156:
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1715              		.loc 1 1138 0
 1716 0002 7047     		bx	lr
 1717              		.cfi_endproc
 1718              	.LFE134:
 1720              		.section	.rodata.flagBitshiftOffset.6762,"a",%progbits
 1721              		.align	2
 1722              		.set	.LANCHOR0,. + 0
 1725              	flagBitshiftOffset.6762:
 1726 0000 00       		.byte	0
 1727 0001 06       		.byte	6
 1728 0002 10       		.byte	16
 1729 0003 16       		.byte	22
 1730 0004 00       		.byte	0
 1731 0005 06       		.byte	6
 1732 0006 10       		.byte	16
 1733 0007 16       		.byte	22
 1734              		.text
 1735              	.Letext0:
 1736              		.file 2 "/Users/tattaka/gcc-arm-none-eabi-4_8-2013q4/arm-none-eabi/include/stdint.h"
 1737              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1738              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1739              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1740              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1741              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 1742              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1743              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_dma.c
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:21     .text.DMA_SetConfig:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:25     .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:77     .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:81     .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:122    .text.DMA_CalcBaseAndBitshift:0000000000000030 $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:128    .text.DMA_CheckFifoParam:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:132    .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:183    .text.DMA_CheckFifoParam:000000000000003a $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:187    .text.DMA_CheckFifoParam:000000000000003e $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:259    .text.HAL_DMA_Init:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:264    .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:440    .text.HAL_DMA_Init:00000000000000cc $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:445    .text.HAL_DMA_DeInit:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:450    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:532    .text.HAL_DMA_Start:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:537    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:606    .text.HAL_DMA_Start_IT:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:611    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:707    .text.HAL_DMA_Abort:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:712    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:825    .text.HAL_DMA_Abort_IT:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:830    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:869    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:874    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1100   .text.HAL_DMA_PollForTransfer:000000000000012c $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1106   .text.HAL_DMA_IRQHandler:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1111   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1432   .text.HAL_DMA_IRQHandler:00000000000001dc $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1440   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1445   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1470   .text.HAL_DMA_RegisterCallback:0000000000000020 $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1476   .text.HAL_DMA_RegisterCallback:0000000000000026 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1560   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1565   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1590   .text.HAL_DMA_UnRegisterCallback:0000000000000020 $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1677   .text.HAL_DMA_GetState:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1682   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1699   .text.HAL_DMA_GetError:0000000000000000 $t
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1704   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1721   .rodata.flagBitshiftOffset.6762:0000000000000000 $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1725   .rodata.flagBitshiftOffset.6762:0000000000000000 flagBitshiftOffset.6762
                     .debug_frame:0000000000000010 $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1597   .text.HAL_DMA_UnRegisterCallback:0000000000000027 $d
/var/folders/m5/1z2v3_dd2cg5xnclvhns6x640000gn/T//ccdjzBgG.s:1597   .text.HAL_DMA_UnRegisterCallback:0000000000000028 $t

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
